#!/usr/bin/env ruby

require 'computer'

computer = Computer.new('input.txt')
#computer.dump
#computer.trace = true

if computer.run
  raise 'unexpectedly completed a run successfully without changing an instruction'
end

puts "accumulator before revisiting an instruction is #{computer.accumulator}"

instructions_to_repair =
  computer
    .instructions
    .each_with_index
    .select { |instruction, _| %i[jmp nop].include?(instruction.mnemonic) }
    .map { |_, i| i }

repairable_pcs =
  instructions_to_repair.select do |pc|
    computer.reset
    computer.repair_instruction(pc)
    computer.run
  end

if repairable_pcs.size != 1
  raise "found more than one changeable instruction: #{repairable_pcs}"
end

broken_pc = repairable_pcs.first
computer.reset
computer.repair_instruction(broken_pc)
computer.run
puts "accumulator after repairing #{broken_pc} (to #{computer.instructions[broken_pc]}) is #{computer.accumulator}"
